Summary: VE Offloading Framework based on VE-UDMA RPC
Name: @PACKAGE@run-%{_ve_arch}
Version: @VERSION@
Release: @RELEASE@%{?dist}
Vendor: @VENDOR@
Group: System Environment/Libraries
License: LGPL
BuildRoot: %{_tmppath}/%{name}-buildroot-%{version}-%{release}
Source0: @PACKAGE@-@VERSION@.tar.gz
BuildRequires: vedebuginfo
Requires: glibc-%{_ve_arch}
Requires: libsysve-%{_ve_arch}
%if "%{_ve_arch}" != "ve3"
Obsoletes: @PACKAGE@run
Provides: @PACKAGE@run
%endif
BuildRequires: glibc-%{_ve_arch}-devel
AutoReqProv: no
%description
The Alternative VE Offloading framework (AVEO) is a faster and much
lower latency replacement to VEO which brings multi-VE support,
simultaneous debugging of VE and VH side, API extensions. It allows
heterogeneous programming of SX-Aurora TSUBASA vector engines with
an accelerator-alike heterogeneous programming model like OpenMP and
OpenACC.

%package devel
Summary: Development package for VE Offloading Framework based on VE-UDMA RPC
Requires: glibc-%{_ve_arch}-devel
Requires: %{name} = %{version}-%{release}
BuildRequires: glibc-%{_ve_arch}-devel
Obsoletes: veoffload-devel veoffload-veorun-devel
%if "%{_ve_arch}" != "ve3"
Obsoletes: @PACKAGE@run-devel
Provides: @PACKAGE@run-devel
%endif

AutoReqProv: no
%description devel
This package includes header files of VE offloading Framework

%define _prefix @PREFIX@
%if  "%{_ve_arch}" != "ve3"
%define _subprefix /opt/nec/ve
%else
%define _subprefix /opt/nec/ve3
%endif
%define _subprefix_com /opt/nec/ve

%define _libdir %{_prefix}/lib64
%define _libexecdir %{_prefix}/libexec
%define _includedir %{_prefix}/include
%define _vebindir %{_subprefix}/bin
%define _vebindir_com %{_subprefix_com}/bin
%define _velibexecdir %{_subprefix}/libexec
%define _velibdir %{_subprefix}/lib
%define _veincludedir %{_subprefix}/include
%define __strip /opt/nec/ve/bin/nstrip
%define _unpackaged_files_terminate_build 0

%if 0%{?rhel} == 8
%global __debug_install_post /opt/nec/ve/libexec/find-debuginfo.sh --unique-debug-suffix "-%{VERSION}-%{RELEASE}.%{_arch}" -S debugsourcefiles.list %{_builddir}/%{buildsubdir} %{nil}
%else
%global __debug_install_post /opt/nec/ve/libexec/find-debuginfo.sh %{nil}
%endif

%prep
%setup -q -n @PACKAGE@-@VERSION@

%build
make all-ve DEST=%{_prefix} VEDEST=%{_subprefix} VEDEST_COM=%{_subprefix_com} PREF=%{buildroot}

%install
make install-ve DEST=%{_prefix} VEDEST=%{_subprefix} VEDEST_COM=%{_subprefix_com} PREF=%{buildroot}

%files
%{_libexecdir}/aveorun_%{_ve_arch}
%{_libexecdir}/aveorun-ftrace_%{_ve_arch}
%{_velibdir}/libaveoVE.so.1
%{_velibdir}/libaveoVE.so.1.0.0
%{_velibdir}/libveohmem.so.1
%{_velibdir}/libveohmem.so.1.0.0

%files devel
%{_velibdir}/libaveoVE.a
%{_velibdir}/liburpcVE.a
%{_velibdir}/liburpcVE_omp.a
%{_velibdir}/libaveoVE.so
%{_velibdir}/libveohmem.so
%{_vebindir_com}/mk_veorun_static_%{_ve_arch}
%{_vebindir_com}/relink_aveorun_%{_ve_arch}
%{_libexecdir}/mk_veorun_static_%{_ve_arch}
%{_libexecdir}/relink_aveorun_%{_ve_arch}
%{_veincludedir}/veo_hmem.h
%{_veincludedir}/veo_ve.h
