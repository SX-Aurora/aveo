VERSION_1 {
  global:
    veo_proc_create;
    veo_proc_create_static;
    veo_proc__create;
    veo_proc_destroy;
    veo_context_open;
    veo_context_close;
    veo_get_context_state;
    veo_load_library;
    veo_unload_library;
    veo_get_sym;
    veo_api_version;
    veo_args_alloc;
    veo_args_clear;
    veo_args_free;
    veo_args_set_i64;
    veo_args_set_u64;
    veo_args_set_i32;
    veo_args_set_u32;
    veo_args_set_i16;
    veo_args_set_u16;
    veo_args_set_i8;
    veo_args_set_u8;
    veo_args_set_double;
    veo_args_set_float;
    veo_args_set_stack;
    veo_call_async;
    veo_call_async_by_name;
    veo_call_async_vh;
    veo_call_result;
    veo_call_peek_result;
    veo_call_wait_result;
    veo_alloc_mem;
    veo_free_mem;
    veo_alloc_hmem;
    veo_free_hmem;
    veo_read_mem;
    veo_write_mem;
    veo_hmemcpy;
    veo_args_set_hmem;
    veo_is_ve_addr;
    veo_async_read_mem;
    veo_async_write_mem;
    veo_context_open_with_attr;
    veo_alloc_thr_ctxt_attr;
    veo_free_thr_ctxt_attr;
    veo_set_thr_ctxt_stacksize;
    veo_get_thr_ctxt_stacksize;
    veo_version_string;
    /* AVEO API extensions */
    veo_call_sync;
    veo_num_contexts;
    veo_get_context;
    veo_context_sync;
    veo_get_hmem_addr;
    veo_proc_identifier;
    veo_set_proc_identifier;
    veo_shared_mem_open;
    veo_shared_mem_close;
    veo_shared_mem_attach;
    veo_shared_mem_detach;
    veo_shmget;
    veo_shmat;
    veo_shmdt;
    veo_dma_post;
    veo_dma_poll;
    veo_dma_post_wait;
    veo_dma_read_ctrl_reg;
    veo_register_mem_to_dmaatb;
    veo_unregister_mem_from_dmaatb;
    veo_get_max_proc_identifier;
    veo_get_proc_identifier_from_hmem;
    veo_access_pcircvsyc_register;
    veo_get_pid_from_hmem;
    veo_get_venum_from_hmem;
    veo_get_proc_handle_from_hmem;
    veo_register_hook;
    veo_get_hook;
    veo_unregister_hook;
    veo_alloc_mem_async;
    veo_free_mem_async;
  local:
    *;
};
